package cafemanagementsystem;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.Statement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ManageCustomerJFrame extends javax.swing.JFrame {

    /**
     * Creates new form ManageCustomerJFrame
     */
    int rowId;
    String userName = "root";
    String password = "password";

    public void refreshRecords() {
        DefaultTableModel customerRecordsTable = (DefaultTableModel) jTableCustomerRecords.getModel();

        int tableRows = customerRecordsTable.getRowCount();
        if (tableRows > 0) {
            for (int i = 0; i < tableRows; i++) {
                customerRecordsTable.removeRow(0);
            }
        }

        try {
            Class.forName("java.sql.DriverManager");
            Connection conn = (Connection) DriverManager.getConnection(
                    "jdbc:mysql://127.0.0.1/cafe_management_system",
                    userName,
                    password
            );
            Statement stmt = (Statement) conn.createStatement();
            String query = "SELECT * FROM customers;";
            ResultSet resultSet = stmt.executeQuery(query);
            if (resultSet.next()) {
                do {
                    int id = resultSet.getInt("cust_id");
                    String custName = resultSet.getString("cust_name");
                    String phoneNo = resultSet.getString("phone_no");
                    String dateOfBirth = resultSet.getString("cust_dob");
                    String emailAddr = resultSet.getString("email_addr");
                    customerRecordsTable.addRow(new Object[]{
                        id, custName, phoneNo, dateOfBirth, emailAddr
                    });
                } while (resultSet.next());
            } else {
                JOptionPane.showMessageDialog(null, "No Customer Record to Load...");
            }
        } catch (ClassNotFoundException | SQLException exce) {
            JOptionPane.showMessageDialog(null, exce.getMessage());
        }
    }

    public ManageCustomerJFrame() {
        initComponents();

        setExtendedState(MAXIMIZED_BOTH);

        DefaultTableModel customerRecordsTable = (DefaultTableModel) jTableCustomerRecords.getModel();

        int tableRows = customerRecordsTable.getRowCount();
        if (tableRows > 0) {
            for (int i = 0; i < tableRows; i++) {
                customerRecordsTable.removeRow(0);
            }
        }

        try {
            Class.forName("java.sql.DriverManager");
            Connection conn = (Connection) DriverManager.getConnection(
                    "jdbc:mysql://127.0.0.1/cafe_management_system",
                    userName,
                    password
            );
            Statement stmt = (Statement) conn.createStatement();
            String query = "SELECT * FROM customers;";
            ResultSet resultSet = stmt.executeQuery(query);
            if (resultSet.next()) {
                do {
                    int id = resultSet.getInt("cust_id");
                    String custName = resultSet.getString("cust_name");
                    String phoneNo = resultSet.getString("phone_no");
                    String dateOfBirth = resultSet.getString("cust_dob");
                    String emailAddr = resultSet.getString("email_addr");
                    customerRecordsTable.addRow(new Object[]{
                        id, custName, phoneNo, dateOfBirth, emailAddr
                    });
                } while (resultSet.next());
            }
        } catch (ClassNotFoundException | SQLException exce) {
            JOptionPane.showMessageDialog(null, exce.getMessage());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBackground = new javax.swing.JPanel();
        jButtonUpdate = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jScrollPaneCustomerRecords = new javax.swing.JScrollPane();
        jTableCustomerRecords = new javax.swing.JTable();
        jButtonRemove = new javax.swing.JButton();
        jLabelCustomerManagement = new javax.swing.JLabel();
        jButtonRefeshRecords = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jPanelSearch = new javax.swing.JPanel();
        jLabelAttribute = new javax.swing.JLabel();
        jComboBoxAttribute = new javax.swing.JComboBox<>();
        jTextFieldValue = new javax.swing.JTextField();
        jButtonSearchRecords = new javax.swing.JButton();
        jLabelValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cafe Management System - Customer Management");
        setName("frameCustomerManagement"); // NOI18N
        setUndecorated(true);
        setResizable(false);

        jPanelBackground.setBackground(new java.awt.Color(255, 248, 220));
        jPanelBackground.setName(""); // NOI18N

        jButtonUpdate.setBackground(new java.awt.Color(255, 255, 255));
        jButtonUpdate.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-update-24.png"))); // NOI18N
        jButtonUpdate.setMnemonic('U');
        jButtonUpdate.setText("Update");
        jButtonUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonAdd.setBackground(new java.awt.Color(255, 255, 255));
        jButtonAdd.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-plus-+-24.png"))); // NOI18N
        jButtonAdd.setMnemonic('I');
        jButtonAdd.setText("Insert");
        jButtonAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jTableCustomerRecords.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jTableCustomerRecords.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer ID", "Customer Name", "Phone Number", "DOB", "Email Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCustomerRecords.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableCustomerRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableCustomerRecordsMouseClicked(evt);
            }
        });
        jScrollPaneCustomerRecords.setViewportView(jTableCustomerRecords);

        jButtonRemove.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRemove.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-remove-24.png"))); // NOI18N
        jButtonRemove.setMnemonic('R');
        jButtonRemove.setText("Remove");
        jButtonRemove.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jLabelCustomerManagement.setFont(new java.awt.Font("Harrington", 0, 36)); // NOI18N
        jLabelCustomerManagement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelCustomerManagement.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-customer-64.png"))); // NOI18N
        jLabelCustomerManagement.setText("<html> \t<b style=\"color: #6f4e37;\"> \t\t&nbsp;Cafe Management System - Customer Management \t</b> </html>");

        jButtonRefeshRecords.setBackground(new java.awt.Color(255, 255, 255));
        jButtonRefeshRecords.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonRefeshRecords.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-reset-24.png"))); // NOI18N
        jButtonRefeshRecords.setMnemonic('E');
        jButtonRefeshRecords.setText("Refresh Records");
        jButtonRefeshRecords.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonRefeshRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefeshRecordsRecordsActionPerformed(evt);
            }
        });

        jButtonClose.setBackground(new java.awt.Color(255, 255, 255));
        jButtonClose.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonClose.setForeground(new java.awt.Color(204, 0, 0));
        jButtonClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-macos-close-24.png"))); // NOI18N
        jButtonClose.setMnemonic('L');
        jButtonClose.setText("Close");
        jButtonClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jPanelSearch.setBackground(new java.awt.Color(255, 248, 220));
        jPanelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Search Customer Record", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Handwriting", 0, 14))); // NOI18N

        jLabelAttribute.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabelAttribute.setText("Attribute:");

        jComboBoxAttribute.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jComboBoxAttribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Customer id", "Customer Name", "Phone Number", "Date of Birth", "Email Address" }));

        jTextFieldValue.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N

        jButtonSearchRecords.setBackground(new java.awt.Color(255, 255, 255));
        jButtonSearchRecords.setFont(new java.awt.Font("Lucida Handwriting", 0, 18)); // NOI18N
        jButtonSearchRecords.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-search-24.png"))); // NOI18N
        jButtonSearchRecords.setMnemonic('S');
        jButtonSearchRecords.setText("Search Records");
        jButtonSearchRecords.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButtonSearchRecords.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchRecordsActionPerformed(evt);
            }
        });

        jLabelValue.setFont(new java.awt.Font("Lucida Handwriting", 0, 14)); // NOI18N
        jLabelValue.setText("Value:");

        javax.swing.GroupLayout jPanelSearchLayout = new javax.swing.GroupLayout(jPanelSearch);
        jPanelSearch.setLayout(jPanelSearchLayout);
        jPanelSearchLayout.setHorizontalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAttribute)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelValue)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldValue)
                .addGap(18, 18, 18)
                .addComponent(jButtonSearchRecords)
                .addContainerGap())
        );
        jPanelSearchLayout.setVerticalGroup(
            jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSearchLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelAttribute)
                        .addComponent(jComboBoxAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelSearchLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonSearchRecords)
                        .addComponent(jLabelValue)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSearchLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButtonSearchRecords, jComboBoxAttribute, jLabelAttribute, jTextFieldValue});

        javax.swing.GroupLayout jPanelBackgroundLayout = new javax.swing.GroupLayout(jPanelBackground);
        jPanelBackground.setLayout(jPanelBackgroundLayout);
        jPanelBackgroundLayout.setHorizontalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCustomerManagement, javax.swing.GroupLayout.DEFAULT_SIZE, 1580, Short.MAX_VALUE)
                    .addComponent(jPanelSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneCustomerRecords)
                    .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                        .addComponent(jButtonAdd)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonRefeshRecords)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonClose)))
                .addContainerGap())
        );
        jPanelBackgroundLayout.setVerticalGroup(
            jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBackgroundLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabelCustomerManagement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jPanelSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneCustomerRecords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAdd)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonRemove)
                    .addComponent(jButtonRefeshRecords)
                    .addComponent(jButtonClose))
                .addContainerGap(511, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelBackground, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        new InsertCustomerRecordJFrame().setVisible(true);

    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        if (rowId != 0) {
            new UpdateCustomerRecordJFrame(rowId).setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "No Customer Record Selected...");
        }

    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        if (rowId != 0) {
            try {
                Class.forName("java.sql.DriverManager");
                Connection conn = (Connection) DriverManager.getConnection(
                        "jdbc:mysql://127.0.0.1/cafe_management_system",
                        userName,
                        password
                );
                Statement stmt = (Statement) conn.createStatement();
                String query = "DELETE FROM customers WHERE cust_id = '" + rowId + "';";
                if (stmt.executeUpdate(query) != 0) {
                    JOptionPane.showMessageDialog(this, "Customer Record Removed Successfully...");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to Remove Customer Record...");
                }
            } catch (ClassNotFoundException | SQLException exce) {
                JOptionPane.showMessageDialog(this, exce.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "No Customer Record Selected...");
        }

        refreshRecords();

    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonRefeshRecordsRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefeshRecordsRecordsActionPerformed
        refreshRecords();

    }//GEN-LAST:event_jButtonRefeshRecordsRecordsActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        new MainMenuJFrame().setVisible(true);
        dispose();

    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonSearchRecordsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchRecordsActionPerformed
        DefaultTableModel customerRecordsTable = (DefaultTableModel) jTableCustomerRecords.getModel();

        String attribute = "";
        int selectedIndex = jComboBoxAttribute.getSelectedIndex();
        switch (selectedIndex) {
            case 0:
                attribute = "cust_id";
                break;
            case 1:
                attribute = "cust_name";
                break;
            case 2:
                attribute = "phone_no";
                break;
            case 3:
                attribute = "cust_dob";
                break;
            case 4:
                attribute = "email_addr";
                break;
            default:
                break;
        }

        String value = jTextFieldValue.getText();
        if (!value.trim().isEmpty()) {
            int tableRows = customerRecordsTable.getRowCount();
            if (tableRows > 0) {
                for (int i = 0; i < tableRows; i++) {
                    customerRecordsTable.removeRow(0);
                }
            }

            try {
                Class.forName("java.sql.DriverManager");
                Connection conn = (Connection) DriverManager.getConnection(
                        "jdbc:mysql://127.0.0.1/cafe_management_system",
                        userName,
                        password
                );
                Statement stmt = (Statement) conn.createStatement();
                String query = "SELECT * FROM customers WHERE " + attribute + " LIKE '%" + value + "%';";
                ResultSet resultSet = stmt.executeQuery(query);
                if (resultSet.next()) {
                    do {
                        int id = resultSet.getInt("cust_id");
                        String custName = resultSet.getString("cust_name");
                        String phoneNo = resultSet.getString("phone_no");
                        String dateOfBirth = resultSet.getString("cust_dob");
                        String emailAddr = resultSet.getString("email_addr");
                        customerRecordsTable.addRow(new Object[]{
                            id, custName, phoneNo, dateOfBirth, emailAddr
                        });
                    } while (resultSet.next());
                } else {
                    JOptionPane.showMessageDialog(this, "No Customer Record Found...");
                }
            } catch (ClassNotFoundException | SQLException exce) {
                JOptionPane.showMessageDialog(this, exce.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Value Text Field Cannot Be Empty...");
        }

    }//GEN-LAST:event_jButtonSearchRecordsActionPerformed

    private void jTableCustomerRecordsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCustomerRecordsMouseClicked
        DefaultTableModel customerRecordsTable = (DefaultTableModel) jTableCustomerRecords.getModel();
        int selectedRowIndex = jTableCustomerRecords.getSelectedRow();
        rowId = (int) customerRecordsTable.getValueAt(selectedRowIndex, 0);

    }//GEN-LAST:event_jTableCustomerRecordsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the windows classic look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCustomerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCustomerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCustomerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCustomerJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCustomerJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonRefeshRecords;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSearchRecords;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JComboBox<String> jComboBoxAttribute;
    private javax.swing.JLabel jLabelAttribute;
    private javax.swing.JLabel jLabelCustomerManagement;
    private javax.swing.JLabel jLabelValue;
    private javax.swing.JPanel jPanelBackground;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JScrollPane jScrollPaneCustomerRecords;
    private javax.swing.JTable jTableCustomerRecords;
    private javax.swing.JTextField jTextFieldValue;
    // End of variables declaration//GEN-END:variables
}
